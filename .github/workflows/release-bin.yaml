# This workflow is used to create a new release with a binary distribution or SRI roles
# If the binary releases fails due to not having tags, force run the `autoversion` workflow
# on the main branch and merge the resulting PR to create the tags and move them to the main branch.

name: Release Binaries

on:
  # Manually run by going to "Actions/Release" in Github and running the workflow
  workflow_dispatch:

jobs:
  release_pool:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Compile Native
        run: cargo build --release --locked --manifest-path=roles/pool/Cargo.toml

      - name: Install aarch64-apple-darwin target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Compile MacOS ARM64
        if: matrix.os == 'macos-latest'
        run: cargo build --release --locked --manifest-path=roles/pool/Cargo.toml --target=aarch64-apple-darwin

      - name: Upload Linux x86-64 binaries to release
        if: matrix.os == 'ubuntu-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/pool_sv2
          asset_name: pool_sv2-x86_64-linux-gnu
          tag: ${{ github.ref }}

      - name: Upload MacOS x86-64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/pool_sv2
          asset_name: pool_sv2-x86_64-apple-darwin
          tag: ${{ github.ref }}

      - name: Upload MacOS ARM64 binaries to release
        if: matrix.os == 'macos-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/aarch64-apple-darwin/release/pool_sv2
          asset_name: pool_sv2-aarch64-apple-darwin
          tag: ${{ github.ref }}

#      - name: Cross Compile ARM64
#        uses: houseabsolute/actions-rust-cross@v0
#        if: matrix.os == 'ubuntu-latest'
#        with:
#          command: build
#          target: aarch64-unknown-linux-gnu
#          args: "--release --locked --manifest-path=roles/pool/Cargo.toml"
#
#      - name: Upload ARM64
#        if: matrix.os == 'ubuntu-latest'
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: roles/target/aarch64-unknown-linux-gnu/release/pool_sv2
#          asset_name: pool_sv2-aarch64-unknown-linux-gnu
#          tag: ${{ github.ref }}
#
#      - name: Cross Compile ARM32
#        if: matrix.os == 'ubuntu-latest'
#        uses: houseabsolute/actions-rust-cross@v0
#        with:
#          command: build
#          target: arm-unknown-linux-gnueabi
#          args: "--release --locked --manifest-path=roles/pool/Cargo.toml"
#
#      - name: Upload ARM32
#        if: matrix.os == 'ubuntu-latest'
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: roles/target/arm-unknown-linux-gnueabi/release/pool_sv2
#          asset_name: pool_sv2-arm-unknown-linux-gnueabi
#          tag: ${{ github.ref }}

      - name: Install cargo-cross
        run: cargo install cross

      - name: Cross Compile 64-bit
        run: |
          bash sv2-rpi.sh jd_client 64
          bash sv2-rpi.sh jd_server 64
          bash sv2-rpi.sh mining_proxy_sv2 64
          bash sv2-rpi.sh pool_sv2 64
          bash sv2-rpi.sh translator_sv2 64
      - name: Check artifacts
        run: |
          arch="aarch64-unknown-linux-gnu"
          bin_dir="target/$arch/release"
          tar_dir="tar"
          artifacts=("jd_client" "jd_server" "mining_proxy_sv2" "pool_sv2" "translator_sv2")
          for file in "${artifacts[@]}"; do
            bin_path="$bin_dir/$file"
            if [ ! -e "$bin_path" ]; then
              echo "Binary file $bin_path does not exist."
              exit 1
            fi
            tar_path="$tar_dir/$file-$arch.tar.gz"
            if [ ! -e "$tar_path" ]; then
              echo "File $tar_path does not exist."
              exit 1
            fi
          done

  release_jdc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --release --locked --manifest-path=roles/jd-client/Cargo.toml
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/jd_client
          asset_name: jd_client
          tag: ${{ github.ref }}
  release_jds:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --release --locked --manifest-path=roles/jd-server/Cargo.toml
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/jd_server
          asset_name: jd_server
          tag: ${{ github.ref }}
  release_proxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --release --locked --manifest-path=roles/mining-proxy/Cargo.toml
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/mining_proxy_sv2
          asset_name: mining_proxy_sv2
          tag: ${{ github.ref }}
  release_translator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: cargo build --release --locked --manifest-path=roles/translator/Cargo.toml
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: roles/target/release/translator_sv2
          asset_name: translator_sv2
          tag: ${{ github.ref }}